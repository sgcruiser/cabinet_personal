{"version":3,"sources":["redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-reducer.js","redux/auth/auth-selectors.js","redux/store.js","components/Container/Container.jsx","components/Navigation/Navigation.jsx","components/AuthNav/AuthNav.jsx","components/UserMenu/UserMenu.jsx","components/AppBar/AppBar.jsx","components/AppFooter/AppFooter.jsx","components/PrivateRoute.jsx","components/PublicRoute.jsx","App.jsx","index.js","routes.js","components/AuthNav/AuthNav.module.scss","components/Navigation/Navigation.module.scss","components/UserMenu/UserMenu.module.scss","components/AppFooter/AppFooter.module.scss","components/Loader/Loader.jsx","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","redux/contacts/contacts-selectors.js","components/Container/Container.module.scss","components/AppBar/AppBar.module.scss","components/Loader/Loader.module.scss"],"names":["registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","post","data","message","toast","error","logIn","logOut","getCurrentUser","getState","persistedToken","auth","get","initialUserState","name","email","setPayload","_","payload","setPayloadUser","user","setPayloadToken","createReducer","setTrue","setFalse","isAuthenticated","loading","combineReducers","getIsAuthenticated","state","getUserEmail","getLoading","actionForIgnore","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","devTools","process","persistor","persistStore","Container","children","className","styles","container","defaultProps","Navigation","useSelector","authSelectors","list","item","exact","to","routes","home","link","activeClassName","AuthNav","login","UserMenu","useDispatch","onLogout","useCallback","authOperations","profile","thumb","src","alt","title","avatar","welcome","type","onClick","button","AppBar","header","AppFooter","footer","text","Date","getFullYear","href","target","rel","developer","PrivateRoute","redirectTo","routeProps","isLoggedIn","PublicRoute","restricted","HomePage","lazy","ContactsPage","RegisterPage","LoginPage","PageNotFound","App","useEffect","fallback","Loader","path","autoClose","ReactDOM","render","StrictMode","document","getElementById","module","exports","loader","color","height","width","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","fetchContacts","actions","addContact","number","contact","success","deleteContact","id","delete","info","items","sort","b","localeCompare","sortId","filter","filterId","setNull","getContacts","getFilter","getfilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","getError"],"mappings":"sOAmBe,GACbA,gBAlBsBC,YAAa,wBAmBnCC,gBAlBsBD,YAAa,wBAmBnCE,cAlBoBF,YAAa,sBAoBjCG,aAlBmBH,YAAa,qBAmBhCI,aAlBmBJ,YAAa,qBAmBhCK,WAlBiBL,YAAa,mBAoB9BM,cAlBoBN,YAAa,sBAmBjCO,cAlBoBP,YAAa,sBAmBjCQ,YAlBkBR,YAAa,oBAoB/BS,sBAlB4BT,YAAa,8BAmBzCU,sBAlB4BV,YAAa,8BAmBzCW,oBAlB0BX,YAAa,6B,iDCXzCY,IAAMC,SAASC,QAAU,wCAGzB,I,UAAMC,EAAQ,SACRA,GACFH,IAAMC,SAASG,QAAQC,OAAOC,cAA9B,iBAAwDH,IAFtDA,EAAQ,WAMVH,IAAMC,SAASG,QAAQC,OAAOC,cAAgB,IAwEnC,GAAEC,SAnEA,SAAAC,GAAW,8CAAI,WAAMC,GAAN,iBAAAC,EAAA,6DAC9BD,EAASE,EAAYxB,mBADS,kBAILa,IAAMY,KAAK,gBAAiBJ,GAJvB,gBAIpBK,EAJoB,EAIpBA,KAERV,EAAUU,EAAKV,OACfM,EAASE,EAAYtB,gBAAgBwB,IAPT,kDAS5BJ,EAASE,EAAYrB,cAAc,KAAMwB,UACzCC,IAAMC,MAAM,KAAMF,SAVU,0DAAJ,uDAmEDG,MApDb,SAAAT,GAAW,8CAAI,WAAMC,GAAN,iBAAAC,EAAA,6DAC3BD,EAASE,EAAYpB,gBADM,kBAIFS,IAAMY,KAAK,eAAgBJ,GAJzB,gBAIjBK,EAJiB,EAIjBA,KAERV,EAAUU,EAAKV,OACfM,EAASE,EAAYnB,aAAaqB,IAPT,kDASzBJ,EAASE,EAAYlB,WAAW,KAAMqB,UACtCC,IAAMC,MAAM,KAAMF,SAVO,0DAAJ,uDAoDSI,OArCnB,yDAAM,WAAMT,GAAN,SAAAC,EAAA,6DACnBD,EAASE,EAAYjB,iBADF,kBAIXM,IAAMY,KAAK,iBAJA,OAMjBT,IACAM,EAASE,EAAYhB,iBAPJ,gDASjBc,EAASE,EAAYf,YAAY,KAAMkB,UACvCC,IAAMC,MAAM,KAAMF,SAVD,yDAAN,uDAqC2BK,eAtBnB,yDAAM,WAAOV,EAAUW,GAAjB,qBAAAV,EAAA,2DAGvBU,IADaC,EAFU,EAEzBC,KAAQnB,MAFiB,wDAO3BA,EAAUkB,GAEVZ,EAASE,EAAYd,yBATM,kBAYFG,IAAMuB,IAAI,kBAZR,gBAYjBV,EAZiB,EAYjBA,KAERJ,EAASE,EAAYb,sBAAsBe,IAdlB,kDAgBzBJ,EAASE,EAAYZ,oBAAoB,KAAMe,UAC/CC,IAAMC,MAAM,KAAMF,SAjBO,0DAAN,0D,eC7DjBU,EAAmB,CACvBC,KAAM,KACNC,MAAO,MAIHC,EAAa,SAACC,EAAD,YAAMC,SACnBC,EAAiB,SAACF,EAAD,YAAMC,QAAsBE,MAC7CC,EAAkB,SAACJ,EAAD,YAAMC,QAAsB1B,OAE9C4B,EAAOE,YAAcT,GAAD,mBACvBb,EAAYtB,gBAAkByC,GADP,cAEvBnB,EAAYnB,aAAesC,GAFJ,cAGvBnB,EAAYhB,eAAgB,kBAAM6B,KAHX,cAIvBb,EAAYb,sBAAwB6B,GAJb,IAQpBxB,EAAQ8B,YAAc,MAAD,mBACxBtB,EAAYtB,gBAAkB2C,GADN,cAExBrB,EAAYnB,aAAewC,GAFH,cAGxBrB,EAAYhB,eAAgB,kBAAM,QAHV,IAOrBuC,EAAU,kBAAM,GAChBC,EAAW,kBAAM,GAEjBC,EAAkBH,aAAc,GAAD,mBAClCtB,EAAYtB,gBAAkB6C,GADI,cAElCvB,EAAYnB,aAAe0C,GAFO,cAGlCvB,EAAYb,sBAAwBoC,GAHF,cAKlCvB,EAAYrB,cAAgB6C,GALM,cAMlCxB,EAAYlB,WAAa0C,GANS,cAOlCxB,EAAYZ,oBAAsBoC,GAPA,cASlCxB,EAAYhB,cAAgBwC,GATM,IAc/BE,EAAUJ,aAAc,GAAD,mBAC1BtB,EAAYxB,gBAAkB+C,GADJ,cAE1BvB,EAAYtB,gBAAkB8C,GAFJ,cAG1BxB,EAAYrB,cAAgB6C,GAHF,cAK1BxB,EAAYpB,aAAe2C,GALD,cAM1BvB,EAAYnB,aAAe2C,GAND,cAO1BxB,EAAYlB,WAAa0C,GAPC,cAS1BxB,EAAYjB,cAAgBwC,GATF,cAU1BvB,EAAYhB,cAAgBwC,GAVF,cAW1BxB,EAAYf,YAAcuC,GAXA,cAa1BxB,EAAYd,sBAAwBqC,GAbV,cAc1BvB,EAAYb,sBAAwBqC,GAdV,cAe1BxB,EAAYZ,oBAAsBoC,GAfR,IAmBvBnB,EAAQiB,YAAc,MAAD,mBACxBtB,EAAYrB,cAAgBqC,GADJ,cAExBhB,EAAYlB,WAAakC,GAFD,cAGxBhB,EAAYf,YAAc+B,GAHF,cAIxBhB,EAAYZ,oBAAsB4B,GAJV,IAOZW,cAAgB,CAC7BP,OACA5B,QACAiC,kBACAC,UACArB,UCrEa,GAAEuB,mBAPU,SAAAC,GAAK,OAAIA,EAAMlB,KAAKc,iBAOVK,aALhB,SAAAD,GAAK,OAAIA,EAAMlB,KAAKS,KAAKL,OAKKgB,WAHhC,SAAAF,GAAK,OAAIA,EAAMlB,KAAKe,W,kLCajCM,EAAkB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,KAE5DC,EAAoB,CACxBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGRC,EAAQC,YAAe,CAC3BC,QAAS,CACPlC,KAAMmC,YAAeP,EAAmBQ,KACxCC,SAAUC,KAEZC,WAAY,SAAAC,GAQR,OAAOA,EAAqB,CAC1BC,kBAAmB,CACjBC,eAAe,GAAD,OAAMrB,OAK5BsB,UAAUC,IAMG,GAAEZ,QAAOa,UAHNC,YAAad,I,+CC5ChB,SAASe,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,OAAO,qBAAKC,UAAWC,IAAOC,UAAvB,SAAmCH,IAG5CD,EAAUK,aAAe,CACvBJ,SAAU,I,qBCAG,SAASK,IACtB,IAAMvC,EAAkBwC,YAAYC,IAActC,oBAElD,OACE,8BACE,qBAAIgC,UAAWC,IAAOM,KAAtB,UACE,oBAAIP,UAAWC,IAAOO,KAAtB,SACE,cAAC,IAAD,CACEC,OAAK,EACLC,GAAIC,IAAOC,KACXZ,UAAWC,IAAOY,KAClBC,gBAAiBb,IAAO,gBAJ1B,oBAUDpC,GACC,6BACE,cAAC,IAAD,CACE6C,GAAIC,IAAOvB,SACXY,UAAWC,IAAOY,KAClBC,gBAAiBb,IAAO,gBAH1B,6B,qBCvBG,SAASc,IACtB,OACE,qBAAIf,UAAWC,IAAOM,KAAtB,UACE,oBAAIP,UAAWC,IAAOO,KAAtB,SACE,cAAC,IAAD,CACEE,GAAIC,IAAO3E,SACXgE,UAAWC,IAAOY,KAClBC,gBAAiBb,IAAO,gBAH1B,uBASF,oBAAID,UAAWC,IAAOO,KAAtB,SACE,cAAC,IAAD,CACEC,OAAK,EACLC,GAAIC,IAAOK,MACXhB,UAAWC,IAAOY,KAClBC,gBAAiBb,IAAO,gBAJ1B,yB,qBCZO,SAASgB,IACtB,IAAM9D,EAAQkD,YAAYC,IAAcpC,cAElChC,EAAWgF,cAEXC,EAAWC,uBACf,kBAAMlF,EAASmF,IAAe1E,YAC9B,CAACT,IAGH,OACE,sBAAK8D,UAAWC,IAAOqB,QAAvB,UACE,qBAAKtB,UAAWC,IAAOsB,MAAvB,SACE,qBACEC,IAAG,sGAAiGrE,GACpGsE,IAAI,SACJC,MAAM,cACN1B,UAAWC,IAAO0B,WAItB,uBAAM3B,UAAWC,IAAO2B,QAAxB,sBACW,sBAAM5B,UAAWC,IAAO9C,MAAxB,SAAgCA,OAG3C,wBACE0E,KAAK,SACLH,MAAM,UACN,aAAW,UACXI,QAASX,EACTnB,UAAWC,IAAO8B,OALpB,uB,qBCtBS,SAASC,IACtB,IAAMnE,EAAkBwC,YAAYC,IAActC,oBAElD,OACE,yBAAQgC,UAAWC,IAAOgC,OAA1B,UACE,cAAC7B,EAAD,IAECvC,EAAkB,cAACoD,EAAD,IAAe,cAACF,EAAD,O,qBCfzB,SAASmB,IACtB,OACE,wBAAQlC,UAAWC,IAAOkC,OAA1B,SACE,wBAAOnC,UAAWC,IAAOmC,KAAzB,mBACU,IAAIC,MAAOC,cADrB,gBAEE,mBACEC,KAAK,+BACLC,OAAO,SACPC,IAAI,sBACJf,MAAM,qBACN,aAAW,qBACX1B,UAAWC,IAAOY,KANpB,SAQE,sBAAMb,UAAWC,IAAOyC,UAAxB,8B,wDCPK,SAASC,EAAT,GAAgE,IAAxCC,EAAuC,EAAvCA,WAAY7C,EAA2B,EAA3BA,SAAa8C,EAAc,iBACtEC,EAAazC,YAAYC,IAActC,oBAE7C,OACE,cAAC,IAAD,2BAAW6E,GAAX,aACGC,EAAa/C,EAAW,cAAC,IAAD,CAAUW,GAAIkC,O,gCCL9B,SAASG,EAAT,GAA+D,IAAxCH,EAAuC,EAAvCA,WAAY7C,EAA2B,EAA3BA,SAAa8C,EAAc,iBACrEC,EAAazC,YAAYC,IAActC,oBAE7C,OACE,cAAC,IAAD,2BAAW6E,GAAX,aACGC,GAAcD,EAAWG,WACxB,cAAC,IAAD,CAAUtC,GAAIkC,IAEd7C,K,WCEFkD,EAAWC,gBAAK,kBACpB,uDAEIC,EAAeD,gBAAK,kBACxB,uDAEIE,EAAeF,gBAAK,kBACxB,uDAEIG,EAAYH,gBAAK,kBACrB,uDAEII,EAAeJ,gBAAK,kBACxB,uDAGa,SAASK,KACtB,IAAMrH,EAAWgF,cAOjB,OAJAsC,qBAAU,WACRtH,EAASmF,IAAezE,oBACvB,CAACV,IAGF,eAAC4D,EAAD,WACE,cAACkC,EAAD,IAEA,cAAC,WAAD,CAAUyB,SAAU,cAACC,EAAA,EAAD,IAApB,SACE,eAAC,IAAD,WACE,cAACX,EAAD,CAAatC,OAAK,EAACkD,KAAMhD,IAAOC,KAAhC,SACE,cAACqC,EAAD,MAGF,cAACN,EAAD,CAAcgB,KAAMhD,IAAOvB,SAAUwD,WAAYjC,IAAOK,MAAxD,SACE,cAACmC,EAAD,MAGF,cAACJ,EAAD,CACEY,KAAMhD,IAAO3E,SACbgH,YAAU,EACVJ,WAAYjC,IAAOvB,SAHrB,SAKE,cAACgE,EAAD,MAGF,cAACL,EAAD,CACEY,KAAMhD,IAAOK,MACbgC,YAAU,EACVJ,WAAYjC,IAAOvB,SAHrB,SAKE,cAACiE,EAAD,MAGF,cAACN,EAAD,UACE,cAACO,EAAD,WAKN,cAACpB,EAAD,IAEA,cAAC,IAAD,CAAgB0B,UAAW,U,cClEjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUhF,MAAOA,EAAMA,MAAvB,SACE,cAAC,IAAD,CAAajB,QAAS,cAAC4F,EAAA,EAAD,IAAY9D,UAAWb,EAAMa,UAAnD,SACE,cAAC,IAAD,UACE,cAAC2D,GAAD,YAKRS,SAASC,eAAe,U,gCCvBX,KACbrD,KAAM,IACNxB,SAAU,YACVpD,SAAU,YACVgF,MAAO,W,mBCJTkD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,sBAAsB,KAAO,sBAAsB,eAAe,gC,mBCAxHD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,yBAAyB,KAAO,yBAAyB,eAAe,mC,mBCAjID,EAAOC,QAAU,CAAC,QAAU,0BAA0B,MAAQ,wBAAwB,OAAS,yBAAyB,QAAU,0BAA0B,MAAQ,wBAAwB,OAAS,2B,mBCArMD,EAAOC,QAAU,CAAC,OAAS,0BAA0B,KAAO,wBAAwB,UAAY,6BAA6B,KAAO,wBAAwB,KAAO,0B,+GCGpJ,SAAST,IACtB,OACE,qBAAK1D,UAAWC,IAAOmE,OAAvB,SACE,cAAC,IAAD,CAAUvC,KAAK,WAAWwC,MAAM,UAAUC,OAAQ,IAAKC,MAAO,U,yLCJvDC,EAAuB3J,YAClC,iCAEW4J,EAAuB5J,YAClC,iCAEW6J,EAAqB7J,YAAa,+BAGlC8J,EAAoB9J,YAAa,+BACjC+J,EAAoB/J,YAAa,8BACjCgK,EAAkBhK,YAAa,4BAG/BiK,EAAuBjK,YAClC,kCAEWkK,EAAuBlK,YAClC,iCAEWmK,EAAqBnK,YAAa,+BAGlCoK,EAAepK,YAAa,0BAG1B,GACb2J,uBACAC,uBACAC,qBAEAC,oBACAC,oBACAC,kBAEAC,uBACAC,uBACAC,qBAEAC,gB,iDCUa,GAAEC,cA9CK,yDAAM,WAAMhJ,GAAN,iBAAAC,EAAA,6DAC1BD,EAASiJ,EAAQX,wBADS,kBAID/I,IAAMuB,IAAI,aAJT,gBAIhBV,EAJgB,EAIhBA,KAERJ,EAASiJ,EAAQV,qBAAqBnI,IANd,gDAQxBJ,EAASiJ,EAAQT,mBAAmB,KAAMnI,UAC1CC,IAAMC,MAAM,KAAMF,SATM,yDAAN,uDA8CU6I,WAhCb,SAAClI,EAAMmI,GAAP,8CAAkB,WAAMnJ,GAAN,mBAAAC,EAAA,6DAC7BmJ,EAAU,CAAEpI,OAAMmI,UAExBnJ,EAASiJ,EAAQR,qBAHkB,kBAMVlJ,IAAMY,KAAK,YAAaiJ,GANd,gBAMzBhJ,EANyB,EAMzBA,KAERE,IAAM+I,QAAQ,0BACdrJ,EAASiJ,EAAQP,kBAAkBtI,IATF,kDAWjCJ,EAASiJ,EAAQN,gBAAgB,KAAMtI,UACvCC,IAAMC,MAAM,KAAMF,SAZe,0DAAlB,uDAgCyBiJ,cAftB,SAAAC,GAAE,8CAAI,WAAMvJ,GAAN,SAAAC,EAAA,6DAC1BD,EAASiJ,EAAQL,wBADS,kBAIlBrJ,IAAMiK,OAAN,oBAA0BD,IAJR,OAMxBjJ,IAAMmJ,KAAK,4BACXzJ,EAASiJ,EAAQJ,qBAAqBU,IAPd,gDASxBvJ,EAASiJ,EAAQH,mBAAmB,KAAMzI,UAC1CC,IAAMC,MAAM,KAAMF,SAVM,yDAAJ,wD,uBChBlBqJ,EAAQlI,YAAc,IAAD,mBACxB+G,GAAuB,SAACpH,EAAD,UAJX,SAAAC,GAAO,OAAIA,EAAQuI,MAAK,SAAC1J,EAAG2J,GAAJ,OAAU3J,EAAEe,KAAK6I,cAAcD,EAAE5I,SAI1B8I,CAApB,EAAM1I,YADL,cAExBsH,GAAoB,SAAC3G,EAAD,YAAUX,SAAV,mBAAqCW,OAFjC,cAGxB8G,GAAuB,SAAC9G,EAAD,UALT,SAACA,EAAOX,GAAR,OAAoBW,EAAMgI,QAAO,qBAAGR,KAAgBnI,KAKnB4I,CAASjI,EAAjC,EAAUX,YAHT,IAQrBF,EAAa,SAACC,EAAD,YAAMC,SAEnB2I,EAASvI,YAAc,GAAD,eACzBuH,EAAe7H,IAKZO,EAAU,kBAAM,GAChBC,EAAW,kBAAM,GAEjBE,EAAUJ,aAAc,GAAD,mBAC1B8G,EAAuB7G,GADG,cAE1B8G,EAAuB7G,GAFG,cAG1B8G,EAAqB9G,GAHK,cAK1B+G,EAAoBhH,GALM,cAM1BiH,EAAoBhH,GANM,cAO1BiH,EAAkBjH,GAPQ,cAS1BkH,EAAuBnH,GATG,cAU1BoH,EAAuBnH,GAVG,cAW1BoH,EAAqBpH,GAXK,IAgBvBuI,EAAU,kBAAM,MAEhB1J,EAAQiB,YAAc,MAAD,mBACxBgH,EAAqBtH,GADG,cAExByH,EAAkBzH,GAFM,cAGxB4H,EAAqB5H,GAHG,cAKxBoH,EAAuB2B,GALC,cAMxB1B,EAAuB0B,GANC,cAQxBxB,EAAoBwB,GARI,cASxBvB,EAAoBuB,GATI,cAWxBrB,EAAuBqB,GAXC,cAYxBpB,EAAuBoB,GAZC,IAeZpI,cAAgB,CAAE6H,QAAOK,SAAQnI,UAASrB,U,QCvEnD2J,EAAc,SAAAnI,GAAK,OAAIA,EAAMmB,SAASwG,OACtCS,EAAY,SAAApI,GAAK,OAAIA,EAAMmB,SAAS6G,QAKpCK,EAAsBC,YAC1B,CAACH,EAAaC,IACd,SAACjH,EAAU6G,GACT,IAAMO,EAAmBP,EAAOQ,cAEhC,OAAOrH,EAAS6G,QAAO,qBAAG/I,KACnBuJ,cAAcC,SAASF,SAMnB,GACbJ,cACAC,YACAlI,WAnBiB,SAAAF,GAAK,OAAIA,EAAMmB,SAAStB,SAoBzC6I,SAnBe,SAAA1I,GAAK,OAAIA,EAAMmB,SAAS3C,OAoBvC6J,wB,mBCxBFpC,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.3cfc2eec.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\n// eslint-disable-next-line\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n\n  loginRequest,\n  loginSuccess,\n  loginError,\n\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\n// Обьект токена\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n// Операция регистрации юзера\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n\n    token.set(data.token);\n    dispatch(authActions.registerSuccess(data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n    toast.error(error.message);\n  }\n};\n\n// Операция авторизации юзера\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n\n    token.set(data.token);\n    dispatch(authActions.loginSuccess(data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n    toast.error(error.message);\n  }\n};\n\n// Операция выхода из профиля\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n    toast.error(error.message);\n  }\n};\n\n// Операция получения текущего пользователя (проверяем локальное хранилище через персист)\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) return;\n\n  token.set(persistedToken);\n\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const { data } = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n    toast.error(error.message);\n  }\n};\n\n// eslint-disable-next-line\nexport default { register, logIn, logOut, getCurrentUser };\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = {\n  name: null,\n  email: null,\n};\n\n// Редюсер для регистрации, авторизации и выхода из профиля\nconst setPayload = (_, { payload }) => payload;\nconst setPayloadUser = (_, { payload }) => payload.user;\nconst setPayloadToken = (_, { payload }) => payload.token;\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: setPayloadUser,\n  [authActions.loginSuccess]: setPayloadUser,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: setPayload,\n});\n\n// Редюсер для токенов\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: setPayloadToken,\n  [authActions.loginSuccess]: setPayloadToken,\n  [authActions.logoutSuccess]: () => null,\n});\n\n// Редюсер для индикации авторизации\nconst setTrue = () => true;\nconst setFalse = () => false;\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: setTrue,\n  [authActions.loginSuccess]: setTrue,\n  [authActions.getCurrentUserSuccess]: setTrue,\n\n  [authActions.registerError]: setFalse,\n  [authActions.loginError]: setFalse,\n  [authActions.getCurrentUserError]: setFalse,\n\n  [authActions.logoutSuccess]: setFalse,\n});\n\n// Создание редюсера для индикации авторизации\n\nconst loading = createReducer(false, {\n  [authActions.registerRequest]: setTrue,\n  [authActions.registerSuccess]: setFalse,\n  [authActions.registerError]: setFalse,\n\n  [authActions.loginRequest]: setTrue,\n  [authActions.loginSuccess]: setFalse,\n  [authActions.loginError]: setFalse,\n\n  [authActions.logoutRequest]: setTrue,\n  [authActions.logoutSuccess]: setFalse,\n  [authActions.logoutError]: setFalse,\n\n  [authActions.getCurrentUserRequest]: setTrue,\n  [authActions.getCurrentUserSuccess]: setFalse,\n  [authActions.getCurrentUserError]: setFalse,\n});\n\n// Редюсер для обработки ошибок\nconst error = createReducer(null, {\n  [authActions.registerError]: setPayload,\n  [authActions.loginError]: setPayload,\n  [authActions.logoutError]: setPayload,\n  [authActions.getCurrentUserError]: setPayload,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  isAuthenticated,\n  loading,\n  error,\n});\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUserEmail = state => state.auth.user.email;\n\nconst getLoading = state => state.auth.loading;\n\n// eslint-disable-next-line\nexport default { getIsAuthenticated, getUserEmail, getLoading };\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\n\nimport { authReducer } from './auth';\nimport { contactsReducer } from './contacts';\n\nconst actionForIgnore = [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware: getDefaultMiddleware => {\n    if (process.env.NODE_ENV === `development`) {\n      return getDefaultMiddleware({\n        serializableCheck: {\n          ignoredActions: [...actionForIgnore],\n        },\n      }).concat(logger);\n    } else {\n      return getDefaultMiddleware({\n        serializableCheck: {\n          ignoredActions: [...actionForIgnore],\n        },\n      });\n    }\n  },\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line\nexport default { store, persistor };\n","import PropTypes from 'prop-types';\n\nimport styles from './Container.module.scss';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n\nContainer.defaultProps = {\n  children: [],\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n","import { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport { authSelectors } from '../../redux/auth';\nimport routes from '../../routes';\n\nimport styles from './Navigation.module.scss';\n\n// Компонент главной навигации (меню) приложения\nexport default function Navigation() {\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <nav>\n      <ul className={styles.list}>\n        <li className={styles.item}>\n          <NavLink\n            exact\n            to={routes.home}\n            className={styles.link}\n            activeClassName={styles['link--active']}\n          >\n            Home\n          </NavLink>\n        </li>\n\n        {isAuthenticated && (\n          <li>\n            <NavLink\n              to={routes.contacts}\n              className={styles.link}\n              activeClassName={styles['link--active']}\n            >\n              Contacts\n            </NavLink>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n}\n","import { NavLink } from 'react-router-dom';\nimport routes from '../../routes';\n\nimport styles from './AuthNav.module.scss';\n\nexport default function AuthNav() {\n  return (\n    <ul className={styles.list}>\n      <li className={styles.item}>\n        <NavLink\n          to={routes.register}\n          className={styles.link}\n          activeClassName={styles['link--active']}\n        >\n          Sign up\n        </NavLink>\n      </li>\n\n      <li className={styles.item}>\n        <NavLink\n          exact\n          to={routes.login}\n          className={styles.link}\n          activeClassName={styles['link--active']}\n        >\n          Log in\n        </NavLink>\n      </li>\n    </ul>\n  );\n}\n","import { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\n\nimport styles from './UserMenu.module.scss';\n\n// Компонент меню пользователя после авторизации\nexport default function UserMenu() {\n  const email = useSelector(authSelectors.getUserEmail);\n\n  const dispatch = useDispatch();\n\n  const onLogout = useCallback(\n    () => dispatch(authOperations.logOut()),\n    [dispatch],\n  );\n\n  return (\n    <div className={styles.profile}>\n      <div className={styles.thumb}>\n        <img\n          src={`https://eu.ui-avatars.com/api/?background=79bbda&color=cf735b&length=1&font-size=0.618&name=${email}`}\n          alt=\"avatar\"\n          title=\"Your avatar\"\n          className={styles.avatar}\n        />\n      </div>\n\n      <span className={styles.welcome}>\n        Welcome, <span className={styles.email}>{email}</span>\n      </span>\n\n      <button\n        type=\"button\"\n        title=\"Log out\"\n        aria-label=\"Log out\"\n        onClick={onLogout}\n        className={styles.button}\n      >\n        Logout\n      </button>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\n\nimport { authSelectors } from '../../redux/auth';\n\nimport Navigation from '../Navigation';\nimport AuthNav from '../AuthNav';\nimport UserMenu from '../UserMenu';\n\nimport styles from './AppBar.module.scss';\n\nexport default function AppBar() {\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <header className={styles.header}>\n      <Navigation />\n\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import styles from './AppFooter.module.scss';\n\nexport default function AppFooter() {\n  return (\n    <footer className={styles.footer}>\n      <small className={styles.text}>\n        &copy; {new Date().getFullYear()} Developed by\n        <a\n          href=\"https://github.com/sgcruiser\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"Developer's Github\"\n          aria-label=\"Developer's Github\"\n          className={styles.link}\n        >\n          <span className={styles.developer}>sgcruiser</span>\n        </a>\n      </small>\n    </footer>\n  );\n}\n","import { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\n// - Если маршрут приватный и пользователь залогинен, рендерит компонент\n// - В противном случае рендерит Redirect на указанный роут\n\n// Компонент приватного роута\nexport default function PrivateRoute({ redirectTo, children, ...routeProps }) {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\n// - Если маршрут ограниченный, и пользователь залогинен, рендерит Redirect на указанный роут\n// - В противном случае рендерит компонент\n\n// Компонент публичного роута\nexport default function PublicRoute({ redirectTo, children, ...routeProps }) {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        children\n      )}\n    </Route>\n  );\n}\n","import { Suspense, lazy, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Switch } from 'react-router-dom';\n\nimport { ToastContainer } from 'react-toastify';\n\nimport routes from './routes';\nimport { authOperations } from './redux/auth';\n\nimport Container from './components/Container';\nimport AppBar from './components/AppBar';\nimport AppFooter from './components/AppFooter';\nimport Loader from './components/Loader';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst HomePage = lazy(() =>\n  import('./pages/HomePage' /* webpackChunkName: \"home-page\" */),\n);\nconst ContactsPage = lazy(() =>\n  import('./pages/ContactsPage' /* webpackChunkName: \"contacts-page\" */),\n);\nconst RegisterPage = lazy(() =>\n  import('./pages/RegisterPage' /* webpackChunkName: \"register-page\" */),\n);\nconst LoginPage = lazy(() =>\n  import('./pages/LoginPage' /* webpackChunkName: \"login-page\" */),\n);\nconst PageNotFound = lazy(() =>\n  import('./pages/PageNotFound' /* webpackChunkName: \"404-page\" */),\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  // Получение текущего юзера при маунте приложения\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <AppBar />\n\n      <Suspense fallback={<Loader />}>\n        <Switch>\n          <PublicRoute exact path={routes.home}>\n            <HomePage />\n          </PublicRoute>\n\n          <PrivateRoute path={routes.contacts} redirectTo={routes.login}>\n            <ContactsPage />\n          </PrivateRoute>\n\n          <PublicRoute\n            path={routes.register}\n            restricted\n            redirectTo={routes.contacts}\n          >\n            <RegisterPage />\n          </PublicRoute>\n\n          <PublicRoute\n            path={routes.login}\n            restricted\n            redirectTo={routes.contacts}\n          >\n            <LoginPage />\n          </PublicRoute>\n\n          <PublicRoute>\n            <PageNotFound />\n          </PublicRoute>\n        </Switch>\n      </Suspense>\n\n      <AppFooter />\n\n      <ToastContainer autoClose={2500} />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n\nimport App from './App.jsx';\nimport Loader from './components/Loader';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={<Loader />} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// eslint-disable-next-line\nexport default {\n  home: '/',\n  contacts: '/contacts',\n  register: '/register',\n  login: '/login',\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"AuthNav_list__2t0Wt\",\"item\":\"AuthNav_item__39ADc\",\"link\":\"AuthNav_link__3b0-h\",\"link--active\":\"AuthNav_link--active__HGSQZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Navigation_list__2pVZl\",\"item\":\"Navigation_item__2PJes\",\"link\":\"Navigation_link__2AzF2\",\"link--active\":\"Navigation_link--active__3m0Tz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserMenu_profile__20CSZ\",\"thumb\":\"UserMenu_thumb__2b5A0\",\"avatar\":\"UserMenu_avatar__TOwif\",\"welcome\":\"UserMenu_welcome__3bGYb\",\"email\":\"UserMenu_email__orHBU\",\"button\":\"UserMenu_button__1dNnH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"AppFooter_footer__1NddH\",\"text\":\"AppFooter_text__3a54f\",\"developer\":\"AppFooter_developer__2Vo0d\",\"link\":\"AppFooter_link__2hC9l\",\"name\":\"AppFooter_name__3F_gp\"};","import Template from 'react-loader-spinner';\n\nimport styles from './Loader.module.scss';\n\nexport default function Loader() {\n  return (\n    <div className={styles.loader}>\n      <Template type=\"TailSpin\" color=\"#cf735b\" height={198} width={198} />\n    </div>\n  );\n}\n","import { createAction } from '@reduxjs/toolkit'; // Импорт функции создания экшена из тулкита\n\n// Создание экшенов для получаения списка контактов\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\n// Создание экшенов для добавления контакта\nexport const addContactRequest = createAction('contacts/addContactsRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\n// Создание экшенов для удаления контакта\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactsRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\n// Создание экшена для фильтра\nexport const changeFilter = createAction('contacts/change-filter');\n\n// eslint-disable-next-line\nexport default {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n\n  changeFilter,\n};\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nimport actions from './contacts-actions'; // Импорт экшенов из контактов в операции\n\n// Асинхронная операция получения списка контактов (делает запрос, диспатчит экшн получения)\nconst fetchContacts = () => async dispatch => {\n  dispatch(actions.fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n\n    dispatch(actions.fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(actions.fetchContactsError(error.message));\n    toast.error(error.message);\n  }\n};\n\n// Асинхронная операция по добавлению контакта (принимает данные с формы, делает запрос, диспатчит экшн добавления)\nconst addContact = (name, number) => async dispatch => {\n  const contact = { name, number };\n\n  dispatch(actions.addContactRequest());\n\n  try {\n    const { data } = await axios.post('/contacts', contact);\n\n    toast.success('Contact has been added');\n    dispatch(actions.addContactSuccess(data));\n  } catch (error) {\n    dispatch(actions.addContactError(error.message));\n    toast.error(error.message);\n  }\n};\n\n// Асинхронная операция удаления контакта (принимает id, делает запрос, диспатчит экшн удаления)\nconst deleteContact = id => async dispatch => {\n  dispatch(actions.deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}`);\n\n    toast.info('Contact has been deleted');\n    dispatch(actions.deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(actions.deleteContactError(error.message));\n    toast.error(error.message);\n  }\n};\n\n// eslint-disable-next-line\nexport default { fetchContacts, addContact, deleteContact };\n","import { combineReducers } from '@reduxjs/toolkit'; // Импорт функции комбайна редюсеров\nimport { createReducer } from '@reduxjs/toolkit'; // Импорт функции создания редюсера\n\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './contacts-actions'; // Импорт экшенов из контактов в редюсеры\n\n// Создание редюсера для массива items в контактах (фетч всех контактов, добавление и удаление, обновление контакта)\n\nconst sortId = payload => payload.sort((a, b) => a.name.localeCompare(b.name));\nconst filterId = (state, payload) => state.filter(({ id }) => id !== payload);\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => sortId(payload),\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\n  [deleteContactSuccess]: (state, { payload }) => filterId(state, payload),\n});\n\n// Создание редюсера для фильтра в контактах\n\nconst setPayload = (_, { payload }) => payload;\n\nconst filter = createReducer('', {\n  [changeFilter]: setPayload,\n});\n\n// Создание редюсера для индикации загрузки контактов\n\nconst setTrue = () => true;\nconst setFalse = () => false;\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: setTrue,\n  [fetchContactsSuccess]: setFalse,\n  [fetchContactsError]: setFalse,\n\n  [addContactRequest]: setTrue,\n  [addContactSuccess]: setFalse,\n  [addContactError]: setFalse,\n\n  [deleteContactRequest]: setTrue,\n  [deleteContactSuccess]: setFalse,\n  [deleteContactError]: setFalse,\n});\n\n// Создание редюсера обработки ошибок в контактах\n\nconst setNull = () => null;\n\nconst error = createReducer(null, {\n  [fetchContactsError]: setPayload,\n  [addContactError]: setPayload,\n  [deleteContactError]: setPayload,\n\n  [fetchContactsRequest]: setNull,\n  [fetchContactsSuccess]: setNull,\n\n  [addContactRequest]: setNull,\n  [addContactSuccess]: setNull,\n\n  [deleteContactRequest]: setNull,\n  [deleteContactSuccess]: setNull,\n});\n\nexport default combineReducers({ items, filter, loading, error });\n","import { createSelector } from '@reduxjs/toolkit'; // Импорт функции для мемоизации селектора\n\nconst getContacts = state => state.contacts.items;\nconst getFilter = state => state.contacts.filter;\nconst getLoading = state => state.contacts.loading;\nconst getError = state => state.contacts.error;\n\n// Мемоизация функции фильтра контактов на базе композитного селектора\nconst getfilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\n// eslint-disable-next-line\nexport default {\n  getContacts,\n  getFilter,\n  getLoading,\n  getError,\n  getfilteredContacts,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1HYUW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__1grwj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__PjqUT\"};"],"sourceRoot":""}